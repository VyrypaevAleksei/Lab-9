import random
import logging

# Настройка логгирования
logging.basicConfig(filename='game_log.txt', level=logging.INFO, format='%(asctime)s - %(message)s', datefmt='%Y-%m-%d %H:%M:%S')

def get_random_sequence(n):

    sequence = list(range(1, n + 1))
    random.shuffle(sequence)
    return sequence

def main():

    try:
        # Ввод количества бочек
        n = int(input("Введите количество бочек (целое положительное число): "))

        if n <= 0:
            print("Пожалуйста, введите положительное число.")
            return

        # Генерация случайной последовательности
        sequence = get_random_sequence(n)

        print("Вытаскиваем бочонки в случайном порядке:")
        for barrel in sequence:
            input(f"Нажмите Enter для вытаскивания бочонка номер {barrel}")
            logging.info(f"Вытаскиван бочонок номер {barrel}")

    except ValueError:
        print("Ошибка: Введите корректное целое число.")

if __name__ == "__main__":
    main()
int main() {
    setlocale(LC_ALL, "Russian");

    srand(static_cast<unsigned int>(time(0)));

    ofstream logfile("logfile.txt");

    log("Программа стартовала");
    cout << "Введите количество бочек (N): ";
    int N;

    while (!(cin >> N) || N <= 0) {
        cin.clear(); 
        cin.ignore(numeric_limits<streamsize>::max(), '\n'); 
        cout << "Пожалуйста, введите положительное натуральное число: ";
    }

    vector<int> sequence = generateRandomSequence(N);

    printSequence(sequence);

    for (int i = 0; i < sequence.size(); ++i) {
        logfile << "Выпало число: " << sequence[i] << endl;
    }

    logfile.close();

    log("Программа завершила выполнение");
    return 0;
}

void log(const string& message) {
    cout << message << endl;
}
